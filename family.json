{
    "_id" : "_design/family",
    "views" : {
        "denormalized" : {
            "map" : "
                function(doc) { 
                    if (doc.type == 'origin') {
                        var p = doc.parents;
                        var c = doc.children;
                        if (p) { 
                            for (var i in p) {
                                for (var j in p) {
                                    var a = p[i].uuid;
                                    var b = p[j].uuid; 
                                    if (a && b && a < b) {
                                        emit ( [ '1', a, 'partner', doc.nature, b ], 1 );
                                        emit ( [ '2', a, 'partner', doc.nature, b ], 1 );
                                        emit ( [ '1', b, 'partner', doc.nature, a ], 1 );
                                        emit ( [ '2', b, 'partner', doc.nature, a ], 1 );
                                    }
                                }
                            }
                        }
                        if (c) {
                            for (var i in c) {
                                for (var j in c) {
                                    var a = c[i].uuid;
                                    var b = c[j].uuid;
                                    if (a && b && a < b) {
                                        emit ( [ '1', a, 'sibling', 'full', b ], 1 );
                                        emit ( [ '2', a, 'sibling', 'full', b ], 1 );
                                        emit ( [ '1', b, 'sibling', 'full', a ], 1 );
                                        emit ( [ '2', b, 'sibling', 'full', a ], 1 );
                                    }
                                }
                            }
                        }
                        if (p && c) {
                            for (var i in p) {
                                for (var j in c) {
                                    var a = p[i].uuid;
                                    var b = c[j].uuid;
                                    if (a && b && a < b) {
                                        emit ( [ '1', a, 'child', c[j].nature, b ], 1 );
                                        emit ( [ '2', a, 'child', c[j].nature, b ], 1 );
                                        emit ( [ '1', b, 'parent', c[j].nature, a ], 1 );
                                        emit ( [ '2', b, 'parent', c[j].nature, a ], 1 );
                                    }
                                }
                            }
                        }
                    } else if (doc.type == 'individual') {
                        emit ( [ '3', doc._id, 'individual', 'self', doc._id ], doc );
                    }
                }
            ",
            "reduce" : "
                function (keys, values, rereduce) {
                    if (!rereduce) {
                        return values.length;
                    } else {
                        return sum(values);
                    }
                }
            "
        }
    },
    "lists" : {
        "individual_family" : "
            function (head, request) {

                var individual_id = request.query.individual;
                if (!individual_id) return;

                var family = {
                    partners:          [],
                    parents:           [],
                    siblings:          [],
                    sibling_children:  [],
                    sibling_partners:  [],
                    children:          [],
                    grand_children:    [],
                    children_partners: []
                };

                var row;
                while (row = getRow()) {

                    var key = row.key;
                    var value = row.value;

                    if (!key || key.length < 5) continue;

                    /* Collect individual id as a partner */
                    family.partners[individual_id] = true;

                    /* Collect direct relation ids */
                    if (key[0] == '1' && key[1] == individual_id) {
                        var a = key[4]; /* Related individual id */
                        switch(key[2]) {
                            case 'partner':
                                family.partners[a] = true;
                                break;
                            case 'parent':
                                family.parents[a] = true;
                                break;
                            case 'sibling':
                                family.siblings[a] = true;
                                break;
                            case 'child':
                                family.children[a] = true;
                                break;
                            default:
                        }
                    }

                    /* Collect indirect relation ids */
                    if (key[0] == '2') {
                        var a = key[1]; /* Directly related individual id */
                        var b = key[4]; /* Indirectly related individual id */
                        switch(key[2]) {
                            case 'child':
                                if (family.siblings[a]) family.sibling_children[b] = true;
                                if (family.children[a]) family.grand_children[b] = true;
                                break;
                            case 'partner':
                                if (family.siblings[a]) family.sibling_partners[b] = true;
                                if (family.children[a]) family.children_partners[b] = true;
                                break;
                            default:
                        }
                    }

                    /* Collect family documents */
                    if (key[0] == '3') {
                        var id = key[4];
                        for (var list in family) {
                            if (family[list][id]) family[list].push(value);
                        }
                    }
                }

                send(JSON.stringify(family));
            }
        "
    }
}
